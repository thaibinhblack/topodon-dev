export declare type ID = string;
export declare type DateString = string;
export declare type User = UserLite | UserDetailed;
export declare type UserLite = {
    id: ID;
    username: string;
    host: string | null;
    name: string;
    onlineStatus: 'online' | 'active' | 'offline' | 'unknown';
    avatarUrl: string;
    avatarBlurhash: string;
    emojis: {
        name: string;
        url: string;
    }[];
    instance?: {
        name: Instance['name'];
        softwareName: Instance['softwareName'];
        softwareVersion: Instance['softwareVersion'];
        iconUrl: Instance['iconUrl'];
        faviconUrl: Instance['faviconUrl'];
        themeColor: Instance['themeColor'];
    };
};
export declare type UserDetailed = UserLite & {
    bannerBlurhash: string | null;
    bannerColor: string | null;
    bannerUrl: string | null;
    birthday: string | null;
    createdAt: DateString;
    description: string | null;
    ffVisibility: 'public' | 'followers' | 'private';
    fields: {
        name: string;
        value: string;
    }[];
    followersCount: number;
    followingCount: number;
    hasPendingFollowRequestFromYou: boolean;
    hasPendingFollowRequestToYou: boolean;
    isAdmin: boolean;
    isBlocked: boolean;
    isBlocking: boolean;
    isBot: boolean;
    isCat: boolean;
    isFollowed: boolean;
    isFollowing: boolean;
    isLocked: boolean;
    isModerator: boolean;
    isMuted: boolean;
    isSilenced: boolean;
    isSuspended: boolean;
    lang: string | null;
    lastFetchedAt?: DateString;
    location: string | null;
    notesCount: number;
    pinnedNoteIds: ID[];
    pinnedNotes: Note[];
    pinnedPage: Page | null;
    pinnedPageId: string | null;
    publicReactions: boolean;
    securityKeys: boolean;
    twoFactorEnabled: boolean;
    updatedAt: DateString | null;
    uri: string | null;
    url: string | null;
};
export declare type Page = {
    id: ID;
    createdAt: DateString;
    updatedAt: DateString;
    userId: User['id'];
    user: User;
    content: Record<string, any>[];
    variables: Record<string, any>[];
    title: string;
    name: string;
    summary: string | null;
    hideTitleWhenPinned: boolean;
    alignCenter: boolean;
    font: string;
    script: string;
    eyeCatchingImageId: DriveFile['id'] | null;
    eyeCatchingImage: DriveFile | null;
    attachedFiles: any;
    likedCount: number;
    isLiked?: boolean;
};
export declare type DriveFile = {
    id: ID;
    createdAt: DateString;
    isSensitive: boolean;
    name: string;
    thumbnailUrl: string;
    url: string;
    type: string;
    size: number;
    md5: string;
    blurhash: string;
    properties: Record<string, any>;
};
export declare type Note = {
    id: ID;
    createdAt: DateString;
    text: string | null;
    cw: string | null;
    user: User;
    userId: User['id'];
    reply?: Note;
    replyId: Note['id'];
    renote?: Note;
    renoteId: Note['id'];
    files: DriveFile[];
    fileIds: DriveFile['id'][];
    visibility: 'public' | 'home' | 'followers' | 'specified';
    visibleUserIds?: User['id'][];
    localOnly?: boolean;
    myReaction?: string;
    reactions: Record<string, number>;
    renoteCount: number;
    repliesCount: number;
    poll?: {
        expiresAt: DateString | null;
        multiple: boolean;
        choices: {
            isVoted: boolean;
            text: string;
            votes: number;
        }[];
    };
    emojis: {
        name: string;
        url: string;
    }[];
    uri?: string;
    url?: string;
    isHidden?: boolean;
};
export declare type Instance = {
    id: ID;
    caughtAt: DateString;
    host: string;
    usersCount: number;
    notesCount: number;
    followingCount: number;
    followersCount: number;
    driveUsage: number;
    driveFiles: number;
    latestRequestSentAt: DateString | null;
    latestStatus: number | null;
    latestRequestReceivedAt: DateString | null;
    lastCommunicatedAt: DateString;
    isNotResponding: boolean;
    isSuspended: boolean;
    softwareName: string | null;
    softwareVersion: string | null;
    openRegistrations: boolean | null;
    name: string | null;
    description: string | null;
    maintainerName: string | null;
    maintainerEmail: string | null;
    iconUrl: string | null;
    faviconUrl: string | null;
    themeColor: string | null;
    infoUpdatedAt: DateString | null;
};
export declare type MeDetailed = UserDetailed & {};
//# sourceMappingURL=index.d.ts.map